'xlsm_to_xlax.wsf
'■■  Excelファイル形式変換 xlsm to xlam  ■■
'                                   Copyright (C)2017 NCD Matsumoto
'                                          http://
'
'このプログラムはGPLに基づいて配布しています。
'  GPLについて   http://ja.wikipedia.org/wiki/GPL
'  GPL契約書     http://www.gnu.org/licenses/gpl.txt
'  GPL契約書和訳 http://opensource.jp/gpl/gpl.ja.html
'
'このプログラムの改変元のGPLライセンスプログラムは以下の通り。
'  著作者    ：TomoSoft (http://TomoSoft.NET)
'  プログラム： 簡易ファイルバックアップスクリプト(FBackup.wsf)
'               簡易ファイルバックアップスクリプト複数ファイルラッパー(FBackupM.wsf)
'
'変更履歴
'  2017/08/08 新規作成
'
<job>

'################################################################################
'# スクリプト
'################################################################################
<script language="VBScript">
Option Explicit

'アラート表示
Const SHOW_ALERT = True
Dim ExcelApp 'Excelオブジェクト

Call Main
WScript.Quit() 'おわり

'----------------------------------------
'-- メイン・ルーチン
'----------------------------------------
Private Function Main()
    
    Dim strSourcePath         '元ファイルフルパス

    Dim FSO                   'FileSystemObject
    Dim Arg                   '引数

    Set FSO = CreateObject("Scripting.FileSystemObject")

    '引数を確認
    If WScript.Arguments.Count = 0 Then
        '使用方法を表示
        WScript.Arguments.ShowUsage
    End If

    'ファイルの順次処理
    For Each Arg In WScript.Arguments
        strSourcePath = Arg
        'ファイルが存在したら実行処理を呼び出す
        If FSO.FileExists(strSourcePath) Then
            Call MainWork(strSourcePath)
        End If
    Next
    
    'オブジェクトを作成していたら解放
    If IsObject(ExcelApp) Then
        ''  Excelを終了
        ExcelApp.Quit()
        ''  オブジェクトを解放
        Set ExcelApp = Nothing
    End If
    
    ''MsgBox "変換処理が完了しました。"

End Function

'----------------------------------------
'-- 1ファイル処理のメイン・ルーチン
'----------------------------------------
Private Function MainWork(strMotoFullName)
    'ファイルが処理されたらtrue、それ以外はfalseが返る
    
    '元ファイル
    Dim strMotoPath
    Dim strMotoName
    Dim strMotoNameBase
    Dim strMotoNameExt
    '戻り値
    Dim rtn
    
    '処理用オブジェクト
    Dim FSO 'FileSystemObject
    Set FSO = CreateObject("Scripting.FileSystemObject")

    '引数がファイルであることの確認
    If Not FSO.FileExists(strMotoFullName) Then
        If SHOW_ALERT Then
            MsgBox "[ERROR]file not exist.", vbQuestion + vbSystemModal
        End If
        MainWork = False: Exit Function
    End If

    '元ファイル名の取得・編集
    strMotoPath = FSO.GetParentFolderName(strMotoFullName) & "\"
    strMotoName = FSO.GetFileName(strMotoFullName)
    strMotoNameBase = FSO.GetBaseName(strMotoFullName)
    strMotoNameExt = FSO.GetExtensionName(strMotoFullName)

    '処理対象ファイルでない
    If LCase(strMotoNameExt) <> "xls" And LCase(strMotoNameExt) <> "xlsm" Then
        If SHOW_ALERT Then
            MsgBox "[ERROR]file not exist." & strMotoName, vbSystemModal
        End If
        MainWork = False: Exit Function
    End If
    
    'ファイルが存在しない
    If Not FSO.FileExists(strMotoFullName) Then
        If SHOW_ALERT Then
            MsgBox "[ERROR]file not exist." & strMotoName, vbSystemModal
        End If
        MainWork = False: Exit Function
    End If
    
    ''Excelファイルを変換
    rtn = ExcelConvWork(strMotoFullName)
    
    MainWork = rtn: Exit Function
End Function

'----------------------------------------
'-- Excelファイルを変換
'----------------------------------------
Private Function ExcelConvWork(strMotoFullName)

    Dim book 'ブック
    Dim flg 'xlsxまたはxlsmで変換処理する場合にtrue

    Dim FSO 'FileSystemObject
    Set FSO = CreateObject("Scripting.FileSystemObject")

    '先ファイル
    Dim strSakiFullName
    Dim strSakiPath
    Dim strSakiName
    Dim strSakiNameBase
    Dim strSakiNameExt
    
    flg = True '処理対象フラグ:処理対象

    '先ファイル名の作成(1)
    strSakiPath = FSO.GetParentFolderName(strMotoFullName) & "\" '元ファイルと同じパス
    strSakiNameBase = FSO.GetBaseName(strMotoFullName)
    strSakiNameExt = "xlam"
    
    If flg Then

        '対象ディレクトリの存在確認
        If Not FSO.FolderExists(strSakiPath) Then
            'なかったら作る。エラーにしない
            CreateFolder (strSakiPath)
        End If
        
        'オブジェクト未作成の場合に作成する
        If IsObject(ExcelApp) = False Then
            ''  Excelオブジェクトを取得(Excelの起動)
            Set ExcelApp = CreateObject("Excel.Application")

            ''  Excelアプリケーションを表示
            ''ExcelApp.Visible = true
            ExcelApp.Visible = False '非表示

            ''  3秒停止
            ''WScript.Sleep( 3000 )
        End If
        

        ''  既存のブックを開く(読み取り専用)
        Set book = ExcelApp.Workbooks.Open(strMotoFullName, , True)

        ''WScript.Sleep (1000) '' 1秒停止

        '先ファイル名の作成(2)
        strSakiName = strSakiNameBase & "." & strSakiNameExt
        strSakiFullName = strSakiPath & strSakiName

        'すでに作成済み
        If FSO.FileExists(strSakiFullName) Then
            If SHOW_ALERT Then
                MsgBox "[ERROR]xlam file already exists." & strSakiFullName, vbSystemModal
            End If
            flg = False
        End If
        
        If flg Then
            book.SaveAs strSakiFullName, 55 'xlOpenXMLAddIn
        End If

        ''  ブックを閉じる
        book.Close()

        '更新日時タイムスタンプもコピー
        Dim oShell          'Shell.Application
        Dim oFolder
        Dim oFolderItem
        Set oShell = CreateObject("Shell.Application")
        Set oFolder = oShell.Namespace(strSakiPath)
        Set oFolderItem = oFolder.ParseName(strSakiName)
        oFolderItem.ModifyDate = FSO.GetFile(strMotoFullName).DateLastModified
    
    End If
    
    ExcelConvWork = flg: Exit Function

End Function

'----------------------------------------
'-- フォルダ作成
'----------------------------------------
Private Sub CreateFolder(ByVal Folder)
    Dim FSO 'FileSystemObject
    Set FSO = CreateObject("Scripting.FileSystemObject")
    Dim ParentFolder
    'WScript.Echo Folder
    ParentFolder = FSO.GetParentFolderName(Folder)
    If ParentFolder <> "" Then If Not FSO.FolderExists(ParentFolder) Then CreateFolder ParentFolder
    If Not FSO.FolderExists(Folder) Then FSO.CreateFolder Folder
End Sub

</script>

'################################################################################
'# Usage用定義
'################################################################################
<runtime>
    <description>Convert the argument xlsm file to xlam file.</description>
    <unnamed
        Name = "SOURCE"
        helpstring = "target_file_path"
        type = "string"
        Required = "true"
        many = "true"
    />
    <example>
        xlsm_to_xlax.wsf D:\Hoge.xlsm
    </example>
</runtime>

</job>

